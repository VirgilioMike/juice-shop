name: Security Suite (SAST & DAST)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # 1) Static analysis com Semgrep
  sast_scan:
    name: SAST Scan (Semgrep)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: |
            p/javascript
            p/nodejs-express
          publishToken: ${{ secrets.GITHUB_TOKEN }}

  # 2) Dynamic analysis com OWASP ZAP
  dast_scan:
    name: DAST Scan (OWASP ZAP)
    runs-on: ubuntu-latest
    needs: sast_scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start Juice Shop
        run: |
          docker run -d --name juiceshop -p 3000:3000 \
            bkimminich/juice-shop

      - name: Wait for Juice Shop
        run: |
          echo "‚åõ Esperando Juice Shop em http://localhost:3000‚Ä¶"
          for i in $(seq 1 12); do
            if curl --silent --fail http://localhost:3000; then
              echo "‚úÖ Juice Shop UP!"
              break
            fi
            echo "‚è≥ Tentando de novo em 5s ($i/12)"
            sleep 5
          done

      - name: Pull & Run ZAP Baseline Scan
        run: |
          IMG=quay.io/zaproxy/zap2docker-stable:latest
          echo "üîÑ Pulling $IMG"
          docker pull $IMG
          echo "üöÄ Rodando ZAP Baseline Scan"
          docker run --rm \
            --network host \
            -v "${{ github.workspace }}":/zap/wrk \
            $IMG \
            zap-baseline.py \
              -t http://localhost:3000 \
              -r zap_report.html \
              -I \
              -T 2

      - name: Upload ZAP report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_report.html
