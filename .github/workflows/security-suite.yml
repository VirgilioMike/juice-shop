name: Security Suite (SAST & DAST)

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  # 1) Static analysis with Semgrep
  sast_scan:
    name: SAST Scan (Semgrep)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Semgrep SAST scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: |
            p/javascript
            p/nodejs-express
          publishToken: ${{ secrets.GITHUB_TOKEN }}

  # 2) Dynamic analysis with OWASP ZAP
  dast_scan:
    name: DAST Scan (OWASP ZAP)
    runs-on: ubuntu-latest
    needs: sast_scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start Juice Shop in Docker
        run: |
          docker run -d \
            --name juiceshop \
            -p 3000:3000 \
            bkimminich/juice-shop

      - name: Wait for Juice Shop to be ready
        run: |
          echo "‚åõ Waiting for Juice Shop at http://localhost:3000 ‚Ä¶"
          for i in $(seq 1 12); do
            if curl --silent --fail http://localhost:3000; then
              echo "‚úÖ Juice Shop is up!"
              break
            fi
            echo "‚è≥ retrying in 5s‚Ä¶ ($i/12)"
            sleep 5
          done

      - name: Authenticate to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" \
            | docker login ghcr.io \
              -u "${{ github.actor }}" \
              --password-stdin

      - name: Pull ZAP image
        run: |
          ZAP_IMAGE=ghcr.io/zaproxy/zap2docker-stable:latest
          echo "üîÑ Pulling $ZAP_IMAGE"
          docker pull $ZAP_IMAGE

      - name: Run ZAP Baseline Scan
        run: |
          ZAP_IMAGE=ghcr.io/zaproxy/zap2docker-stable:latest
          echo "üöÄ Running ZAP Baseline Scan against http://localhost:3000"
          docker run --rm \
            --network host \
            -v "${{ github.workspace }}":/zap/wrk \
            $ZAP_IMAGE \
            zap-baseline.py \
              -t http://localhost:3000 \
              -r zap_report.md \
              -I \
              -T 2

      - name: Show ZAP report
        run: |
          echo "üìù ZAP Report:"
          if [ -f zap_report.md ]; then
            cat zap_report.md
          else
            echo "(nenhum relat√≥rio gerado)"
          fi

      # Opcional: envie o relat√≥rio como artefato
      #- name: Upload ZAP report
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: zap-report
      #    path: zap_report.md
