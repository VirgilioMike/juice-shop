name: Security Suite (SAST & DAST)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # -- SAST Static Analysis usando Semgrep --
  sast_scan:
    name: SAST Scan (Semgrep)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run Semgrep
        id: semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          # regras padr√£o JavaScript/Node.js
          config: |
            p/javascript
            p/nodejs-express
          # publica coment√°rios em PRs
          publishToken: ${{ secrets.GITHUB_TOKEN }}
          # sa√≠da em SARIF
          output-format: sarif
          sarif_file: semgrep.sarif

      - name: Upload SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: semgrep.sarif

  # -- DAST Dynamic Analysis usando OWASP ZAP --
  dast_scan:
    name: DAST Scan (OWASP ZAP)
    runs-on: ubuntu-latest
    needs: sast_scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start Juice Shop in Docker
        run: |
          docker run -d --name juiceshop -p 3000:3000 \
            bkimminich/juice-shop

      - name: Wait for Juice Shop to be ready
        run: |
          echo "‚åõ Esperando Juice Shop em http://localhost:3000‚Ä¶"
          for i in $(seq 1 12); do
            if curl --silent --fail http://localhost:3000; then
              echo "‚úÖ Juice Shop est√° UP!"
              break
            fi
            echo "‚è≥ Re-tentando em 5s‚Ä¶ ($i/12)"
            sleep 5
          done

      - name: Pull ZAP Docker image (Quay.io)
        run: |
          ZAP_IMG=quay.io/zaproxy/zap2docker-stable:latest
          echo "üîÑ puxando $ZAP_IMG"
          docker pull $ZAP_IMG

      - name: Run ZAP Baseline Scan
        run: |
          ZAP_IMG=quay.io/zaproxy/zap2docker-stable:latest
          echo "üöÄ executando ZAP contra http://localhost:3000"
          docker run --rm \
            --network host \
            -v "${{ github.workspace }}":/zap/wrk \
            $ZAP_IMG \
            zap-baseline.py \
              -t http://localhost:3000 \
              -r zap_report.html \
              -I \
              -T 2

      - name: Upload ZAP report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: zap_report.html
